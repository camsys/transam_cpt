:ruby
  popup ||= '0'

:css
  .popover {
    width: 350px;
  }
  .modal-lg {
    width: 80%;
  }

#asset-actions.btn-toolbar
  .btn-group{:role => 'group'}
    %button.btn.btn-info.move-assets-button{:type => 'button'}
      %i.fa.fa-tasks
      %span#button-text Move selected to FY
    %button.btn.btn-info.move-assets-button.dropdown-toggle{:type => 'button', :data => {:toggle => 'dropdown'}, :aria => {:haspopup => 'true', :expanded => 'false'}}
      %span.caret
      %span.sr-only Toggle Dropdown
    %ul.dropdown-menu
      - @fiscal_years.each do |fy|
        - unless fy[1] == @project.fy_year
          %li
            = link_to fy[0], move_assets_planning_index_path(:ali => @activity_line_item.object_key, :year => fy[1]), :remote => true, :class => 'move-assets-action', :data => { :year => fy[1] }

.table-responsive
  %table.table.table-condensed.table-hover{:id => "assets-popup-table",
    :data => {:toggle => 'table',
    :classes => 'table-no-bordered',
    :toolbar => "#asset-actions",
    :search => 'false',
    :striped => 'true',
    :single_select => 'false'}}
    %thead
      %tr
        %th.bs-checkbox{:data => {:checkbox => 'true', :field => 'state'}}
        %th.center{:data => {:visible => 'false'}} Object
        %th.left Tag
        %th.left Description
        %th.center Fuel

        %th.center Age
        %th.center Bcklg
        %th.right Mileage
        %th.center Cond.

        %th.center Policy FY
        %th.right Orig. Cost
        %th.right Book Val.
        %th.right Sch. Cost
        - if popup == '1'
          %th
        - if ali.has_early_replacement_assets?
          %th

    %tbody
      - cost = book_value = scheduled_cost = 0
      - ali.assets.each do |a|
        - cost += a.cost
        - book_value += a.book_value
        - if ali.rehabilitation_ali?
          - scheduled_cost += ali.rehabilitation_cost a
        - else
          - scheduled_cost += a.scheduled_replacement_cost.to_i

        %tr{:data => {:action_path => inventory_path(a), :policy_replacement_year => a.policy_replacement_year}}
          %td{:data => {:checkbox => true}}
          %td.center= a.object_key
          %td.left= a.asset_tag
          %td.left= a.description
          %td.center= FuelType.find(a.fuel_type_id).code unless a.fuel_type_id.nil?

          %td.center= a.age
          %td.center= format_as_boolean(a.in_backlog)
          %td.right= format_as_integer(a.reported_mileage)
          %td.center= format_as_decimal(a.reported_condition_rating, 1)

          %td.center= format_as_fiscal_year(a.policy_replacement_year)
          %td.right= format_as_currency(a.cost)
          %td.right= format_as_currency(a.book_value)
          - if ali.rehabilitation_ali?
            %td.right= format_as_currency(a.estimated_rehabilitation_cost)
          - else
            %td.right= format_as_currency(a.scheduled_replacement_cost)
          - if popup == '1'
            %td.center
              %a{:tabindex => 0, :class => 'transam-popover', :data => {:toggle => "popover", :html => 'true', :placement => 'left', :container => 'body', :title => "#{a.name}",  :content => "#{raw render :partial => 'assets/summary', :locals => {:asset => a}}"}}
                %i.fa.fa-info-circle.fa-1-25x.text-info
              / Pivotal: #117096513
              / - if can? :update, @activity_line_item
              /   = link_to remove_asset_capital_project_activity_line_item_path(@project, ali, :asset => a.object_key), :method => :delete, :data => {:confirm => "Are you sure? The action cannot be undone!"}  do
              /     %i.fa.fa-times-circle.action-icon.text-danger

          - if a.is_early_replacement?
            %td.center
              %a{:tabindex => 0, :class => 'transam-popover', :data => {:toggle => "popover", :html => 'true', :placement => 'left', :container => 'body', :title => "Early Replacement",  :content => "<p>#{a.formatted_early_replacement_reason}</p>"}}
                %i.fa.fa-exclamation-triangle{style: 'color: red !important;'}

    %tfoot
      %tr
        %td{:colspan => 9}
        %td.right= format_as_currency(cost)
        %td.right= format_as_currency(book_value)
        %td.right= format_as_currency(scheduled_cost)


:javascript

  var selected_assets = [];

  $(document).ready(function() {

    // Disable the package actions
    enable_disable_asset_actions();

    $('#assets-popup-table').bootstrapTable();

    $('.transam-popover').popover({
      trigger: 'hover',
      container: 'body',
      placement: 'left'
    });

    // get the policy years of selected assets
    function get_asset_policy_years() {
      var years = [];
      $('#assets-popup-table td.bs-checkbox input[type=checkbox]:checked').each(function() {
        var year = $(this).closest('tr').data('policy-replacement-year');
        if($.isNumeric(year) && years.indexOf(year) < 0) {
          years.push(year);
        }
      });
      return years;
    }

    // check if has early_replacement asset by comparing move_year to asset policy replacement year
    function is_early_replacement(move_year) {
      var is_early = false;
      if($.isNumeric(move_year)) {
        var years = get_asset_policy_years();
        for(var i=0, year_count=years.length; i<year_count; i++) {
          var policy_year = years[i];
          if(policy_year > move_year) {
            is_early = true;
            break;
          }
        }
      }
      return is_early;
    }

    // Add a handler for the move action which appends the selected assets to
    // the href

    var fiscal_years = #{@fiscal_years.to_h.invert.to_json} || {};
    function getFiscalYear(year) {
      return fiscal_years[year] || year;
    }

    $(".move-assets-action").on('click', function(e) {
      var href = $(this).attr('href');
      href += ('&targets=' + selected_assets.join(','));
      
      
      var move_year = $(this).data('year');

      var is_early = is_early_replacement(move_year);
      if(is_early) {
        var msg = "You are moving assets from " + getFiscalYear(#{@activity_line_item.fy_year}) + " to " + getFiscalYear(move_year) + ". This action will put some assets in early replacement. Please provide an explanation <span style='color: red;'>(*-required)</span>:";
        transam.bootbox_comment_dialog(msg, function(reason) {
          if(reason == null) {
              return true;
          } else if (reason.trim() == "") {
            return false;
          } else {
            href += ('&early_replacement_reason=' + encodeURIComponent(reason));
            $('#form-modal').modal('hide');
            $('<div class="modal-backdrop"></div>').appendTo(document.body).hide().fadeIn();
            $("#spinner").show();
            $.ajax({url: href});
          }
        });

        return false;
      } 

      $(this).attr('href', href);
      //console.log($(this).attr('href'));
      $('#form-modal').modal('hide');
      $('<div class="modal-backdrop"></div>').appendTo(document.body).hide().fadeIn();
      $("#spinner").show();
      return true;
    });
  });

  $('#assets-popup-table').on('check.bs.table', function(e, row) {
    update_selected();
  }).on('uncheck.bs.table', function(e, row) {
    update_selected();
  }).on('check-all.bs.table', function(e, row) {
    update_selected();
  }).on('uncheck-all.bs.table', function(e, row) {
    update_selected();
  });

  // Enables or disables the package actions depending on how many are selected
  function enable_disable_asset_actions() {
    if (selected_assets.length > 0) {
      $('.move-assets-button').removeClass('disabled');
      $('#button-text').html("Move " + selected_assets.length + " assets to fiscal year")
    } else {
      $('.move-assets-button').addClass('disabled');
    }
  };

  // Updates the selected rows in the table
  function update_selected() {
    var selected = $('#assets-popup-table').bootstrapTable('getSelections');
    //console.log(selected);
    selected_assets = [];
    for (i = 0; i < selected.length; i++) {
      var selected_key = selected[i][1];
      if(selected_assets.indexOf(selected_key) < 0) {
        selected_assets.push(selected_key);
      }
    }
    //console.log(selected_assets);
    enable_disable_asset_actions();
  };

  // Removes an order identified by its object key from the set of orders selected
  function remove_from_selected(object_key) {
    var asset_index = selected_assets.indexOf(object_key);
    if(asset_index >= 0) {
      selected_assets.splice(asset_index, 1);
    }
    enable_disable_asset_actions();
  };
