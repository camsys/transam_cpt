:css
  table.dataTable thead .sorting, 
  table.dataTable thead .sorting_asc, 
  table.dataTable thead .sorting_desc {
      background : none;
  }

  .deletePhase {
    cursor: pointer;
  }

:javascript

  // Move a phase to a new year and hide the panel
  function moveTo(object_key, year, element){
    $.ajax({
      url: '/draft_project_phase_assets/' + object_key + '/move_to',
      data: {'fy_year': year, 'object_key': object_key},
      type: 'PUT',
      success: function(result) {
        console.log("Updated Year");
      }
    });
  }

  // Delete a phase and hide the panel
  function deleteThisPhase(object_key){
    console.log('Deleting . . . ');
    $.ajax({
      url: '/draft_project_phases/' + object_key,
      dataType: "json",
      type: 'DELETE',
      success: function(result) {
        console.log("DELETED PHASE");
      }
    });
  }


.panel.panel-default.phase{ ali: "#{phase.draft_project.team_ali_code}", year: "#{phase.fy_year}", id: "#{phase.object_key}" }
  .panel-heading
    .row
      .col-md-10
        %h4
          -if phase.pinned
            %i.fa.fa-thumb-tack.pinned.pinner{data: {object_key: phase.object_key}}
          -else
            %i.fa.fa-thumb-tack.unpinned.pinner{data: {object_key: phase.object_key}}
          =link_to draft_project_phase_path(phase) do
            =phase.name
      .col-md-2.text-right
        = form_with model: phase, html:{class: "phase_year_select"} do |f|
          = f.select :phase_year_select, options_for_select((phase.scenario.fy_year..phase.scenario.ending_fy_year).map{ |y| [format_as_fiscal_year(y), y] }, phase.fy_year) #.year_range.uniq.sort.map!{ |y| [format_as_fiscal_year(y), y] }
  
  .panel-body

    // Basic info 
    .row 
      .col-md-2
        .row
          %strong 
            ALI:
          =phase.team_ali_code.try(:code)
        .row 
          %strong
            Shadow:
          =phase.notional.to_s
        .row 
          %strong
            Milestones
      .col-md-8
        .row
          %strong
            Project: 
          =link_to draft_project_path(phase.draft_project) do
            =phase.draft_project.try(:title)   
        -unless phase.draft_project.justification.blank?
          .row 
            %strong
              Justification:
            =phase.draft_project.justification
        -unless phase.draft_project.description.blank?
          .row 
            %strong
              Description:
            =phase.draft_project.description
      .col-md-2.text-right
        .row
          %strong
            Cost:
          =format_as_currency(phase.cost)
        .row
          %strong
            Allocated:
          =format_as_currency(phase.allocated)
        .row
          %strong
            Remaining:
          =format_as_currency(phase.remaining)
      //.col-md-2
      //  .row 
      //    =pie_chart [["Allocated",phase.allocated],["Remaining",phase.remaining]], donut: true, colors:["green","red"]


    // Asstes Table
    %hr 
    .row
      =render partial: "draft_project_phases/phase_assets_table", locals: {draft_project_phase: phase}
      
      //
      
      
  .panel-footer
    .row
      .col-md-10.text-left
        ="Created: #{phase.created_at.strftime('%m/%d/%Y at %I:%M%p')}"
      .col-md-2.text-right
        %i.fa.fa-trash.deletePhase{data: {object_key: phase.object_key}}
