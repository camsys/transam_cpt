:scss
  $sogr_project_color: #aaffff;
  $other_project_color: #9fff87;
  $notional_project_color: #ffaaff;

  hr.ali {
    margin-top: 5px;
    margin-bottom: 10px;
  }
  .popover {
    z-index: 1060;
  }
  tr td.striped {
    width: 110px;
  }
  tr td.striped:nth-child(odd) {
    //background-color: #dae5f4;
  }
  tr td.striped:nth-child(even) {
    //background-color: #A6EDDC;
    background-color: #dae5f4;
    //background-color: #b8d1f3;
  }
  .well-sm {
    background-color: #4e95f4 !important;
    color: #FFF;
  }
  .panel-body > p {
    font-size: 0.85em;
    margin: 0 0 2px;
  }
  .panel-sogr {
    background-color: lighten($sogr_project_color, 10%) !important;
    border: 1px solid darken($sogr_project_color, 10%)!important;
  }
  .panel-sogr > .panel-body > hr.ali {
    border-top: 1px solid darken($sogr_project_color, 10%);
  }
  .panel-sogr:hover {
    background-color: $sogr_project_color !important;
  }

  .panel-other {
    background-color: lighten($other_project_color, 10%) !important;
    border: 1px solid darken($other_project_color, 10%)!important;
  }
  .panel-other > .panel-body > hr.ali {
    border-top: 1px solid darken($other_project_color, 10%);
  }
  .panel-other:hover {
    background-color: $other_project_color !important;
  }

  .panel-notional {
    background-color: lighten($notional_project_color, 10%) !important;
    border: 1px solid darken($notional_project_color, 10%)!important;
  }
  .panel-notional > .panel-body > hr.ali {
    border-top: 1px solid darken($notional_project_color, 10%);
  }
  //colors: ['#4DDBB8', '#A6EDDC', '#00A37A'],

  .modal-backdrop {
    display: none;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .ajax-loader-message {
    font-size: 20px;
  }
  .ajax-loader {
    position: fixed;
    top: 50%;
    left: 50%;
    //width: 100%;
    margin-left: -50px;
    margin-top: -50px;
    padding: 20px;
    z-index: 1099;
    background-color: #FFF;
    border: 1px solid #EEE;
    border-radius:5px;
  }

#spinner= loader_panel_tag({:message => "Updating capital projects and ALIs...", :size => 3, :spinner => "cog"})

#plan
  = render 'plan'

:javascript

  $(document).ready(function() {
    // Set up the event listeners
    configure_event_listeners();
    $("#spinner").hide();
  });

  // Initialize the draggable elements
  function configure_draggable() {
    $(".draggable").draggable({
      cursor: "crosshair",
      opacity: "0.75",
  		helper : 'clone',
  		revert : 'invalid',
      create: function(event, ui) {
        var project = $(this).data('project');
        //console.log("tr[data-project='" + project + "']")
        $(this).draggable('option', 'containment', "tr[data-project='" + project + "']");
      }
    });
  };


  // Configure all event listeners
  function configure_event_listeners() {
    // Config draggable elements
    configure_draggable();

    // Mark droppable targets
    configure_droppable();
  };

  // Creates drop targets for draggable items.
  var confirm_result = false;
  function configure_droppable() {
    $(".drop-target").droppable({
  		hoverClass : 'drop-zone-active',
  		drop : function(ev, ui) {
        var drop_year = $(this).data('year');
        var ali_year = ui.draggable.data('year');
        var project = ui.draggable.data('project');
        var url = ui.draggable.data('url');
        var ali = ui.draggable.data('ali');
        var action = ui.draggable.data('action');
        // Make sure it is not a redundant drop
        if (ali_year === drop_year) {
          return;
        }

        var is_sogr = ui.draggable.hasClass('panel-sogr');
        var policy_years = ui.draggable.data('assets-policy-replacement-years');
        var is_early_replacement = false;
        // iterate all SOGR assets, check if any early replacement happens
        if(is_sogr && policy_years) {
          for(var i=0, year_count=policy_years.length; i<year_count; i++) {
            if(policy_years[i] > drop_year) {
              is_early_replacement = true;
              break;
            }
          }
        }

        // early replacemnt SOGR: need to prompt user to provide reason
        if(is_early_replacement) {
          var msg = "You are moving ALI from " + ali_year + " to " + drop_year + ". This move affects assets with early replacement based on policy replacement year, please provide an explation:";
          bootbox.prompt(msg, function(reason) {
            move_ali(url, ali, action, drop_year, project, reason);
          });
        } else {
          var msg = "Move ALI from " + ali_year + " to " + drop_year + "?";
          bootbox.confirm(msg, function(result) {
            if (result) {
              move_ali(url, ali, action, drop_year, project);
            }
          });
        }
  		}
  	});
  };

  function move_ali(url, ali, action, drop_year, project, early_replacement_reason) {
    $.ajax({
        url: url,
        type: 'POST',
        data: {
          ali: ali,
          invoke: action,
          year: drop_year,
          project: project,
          early_replacement_reason: early_replacement_reason,
          // preserve the state of the filter menu
          org_filter: org_filter,
          capital_project_type_filter: capital_project_type_filter,
          capital_project_flag_filter: capital_project_flag_filter,
          asset_subtype_filter: asset_subtype_filter
        },
        beforeSend: function() {
          $('<div class="modal-backdrop"></div>').appendTo(document.body).hide().fadeIn();
          $("#spinner").show();
        },
        complete: function (response) {
          //$("#plan-table").show();
          $('#spinner').hide();
          $(".modal-backdrop").remove();
        },
        error: function () {
          transam.show_popup_message("Warning", "Something went wrong. Please try again!", "warning");
        }
    });
  }
