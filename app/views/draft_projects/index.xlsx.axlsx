require 'rubyXL'

wb = xlsx_package.workbook

wb.styles do |style|

    # Define styles
    table_header = style.add_style(bg_color: "BFBFBF", b: true, font_name: "Calibri (body)", :border => { :style => :thin, :color => "00000000" })
    column_header = style.add_style(b: true, font_name: "Calibri (body)")
    table_data = style.add_style(font_name: "Calibri (body)")

    # Add worksheet
    wb.add_worksheet(name: "Draft Projects") do |sheet|

        # Define columns [column header, data value]
        columns = {
	    scenario:		    ["Scenario", "project.scenario.name"],
            organization:           ["Agency", "project.organization.short_name"],
            year:                   ["FY", "format_as_fiscal_year(project.fy_year)"],
            project_id:             ["Project Name", "project.project_number.to_s.split('#').last"],
            project_type:           ["Project Type", "project.capital_project_type"],
            project_description:    ["Project Description", "project.description"],
            project_justification:  ["Project Justification", "project.justification"],
            scope:                  ["Scope", "project.team_ali_code.try(:scope)"],
            emergency_project:      ["Emergency Project", "format_as_yes_no(project.emergency?)"],
            sogr:                   ["SOGR", "format_as_yes_no(project.sogr?)"],
            shadow:                 ["Shadow", "format_as_yes_no(project.notional?)"],
            multi_year:             ["Multi Year", "project.multi_year?"],
            number_of_alis:         ["# ALIs", "project.number_of_alis"],
            number_of_assets:       ["Asset Count", "project.number_of_assets"],
            total_cost:             ["Cost", "project.cost"],
            scenario_created:       ["Create Date", "format_as_date(project.scenario.try(:created_at))"],
            scenario_modified:      ["Last Modified Date", "format_as_date(project.scenario.try(:updated_at))"],
            scenario_status:        ["Scenario Status", "project.scenario.try(:state_title)"]
        }

        # Merge table header cells and add padding
        sheet.merge_cells "A1:#{RubyXL::Reference.ind2ref(0, columns.length - 1)}"

        table_header_cells = ["Draft Project Data"]
        (columns.length - 1).times do
            table_header_cells << ""
        end

        # Add table header
        sheet.add_row table_header_cells, style: table_header

        # Add column headers
        sheet.add_row columns.map{|key, value| value[0]}, style: column_header

        # Add data
        @projects.each do |project|
            sheet.add_row columns.map{|key, value| eval(value[1])}, style: table_data
        end
    end
end