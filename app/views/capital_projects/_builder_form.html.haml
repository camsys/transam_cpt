= simple_form_for(@builder_proxy,
  :html => {:class => 'form-vertical'},
  :url => runner_capital_projects_path,
  :wrapper => :vertical_form,
  :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes,
  :radio_buttons => :vertical_radio_and_checkboxes,
  :file => :vertical_file_input,
  :boolean => :vertical_boolean}) do |f|

  - if @organization_list.count > 1
    .row
      .col-md-9
        = f.input :organization_id, :required => true, :collection => Organization.where(id: @organization_list), :label_method => 'coded_name'
      .col-md-3
        = f.input :start_fy, :required => true,      :collection => @fiscal_years, :label => "Starting #{get_fiscal_year_label}"
  .row
    - FtaAssetCategory.active.each do |fta_category|
      .col-md-3.fta-category-div{id: fta_category.name.parameterize.underscore}
        %span.checkbox
          %label
            = check_box_tag fta_category.name.parameterize.underscore, 1, true, class: 'fta-category-checkbox'
            %strong= fta_category
        = f.input :fta_asset_classes, collection: fta_category.fta_asset_classes, as: :check_boxes, label: false, :input_html => { :checked => true }
        - if FtaAssetCategory.where(name: ['Facilities', 'Infrastructure']).include? fta_category
          .col-md-offset-1
            %span.checkbox
              %label
                = check_box_tag "#{fta_category.name.singularize.downcase}_primary", 1, true, class: "#{fta_category.name.singularize.downcase}_primary_component_checkboxes"
                Primary
            %span.checkbox
              %label
                = check_box_tag "#{fta_category.name.singularize.downcase}_component", 1, fta_category.name == 'Infrastructure', class: "#{fta_category.name.singularize.downcase}_primary_component_checkboxes #{fta_category.name == 'Infrastructure' ? '' : 'not-checked'}"
                Component / Sub-Component


  - builder_warning_style = "display: none;"
  - builder_warning_style = "" if @organization_list.count == 1 && Organization.get_typed_organization(Organization.find_by(id: @organization_list.first)).has_sogr_projects?
  .row.builder-warning{style: builder_warning_style}
    .col-md-12
      = render 'builder_warning'

  = f.submit "Run analyzer...", :class => "btn btn-primary", :id => "submit_button"


:javascript

  $('.fta-category-checkbox').on('click', function(event) {
    if ($(this).is(':checked')) {
      $(this).parent().parent().parent().find('input[type="checkbox"]:not(.not-checked)').prop('checked', true);
      $(this).parent().parent().parent().find('.facility_primary_component_checkboxes').attr('disabled', false);
        $(this).parent().parent().parent().find('.infrastructure_primary_component_checkboxes').attr('disabled', false);
    } else {
      $(this).parent().parent().parent().find('input[type="checkbox"]:not(.not-checked)').prop('checked', false);
      $(this).parent().parent().parent().find('.facility_primary_component_checkboxes').attr('disabled', true);
      $(this).parent().parent().parent().find('.infrastructure_primary_component_checkboxes').attr('disabled', true);
    }
  });

  $('.builder_proxy_fta_asset_classes input').on('click', function(event) {

    if ($(this).parent().parent().parent().parent().find('.builder_proxy_fta_asset_classes input:checked').length == 0) {
      $(this).parent().parent().parent().parent().find('input[type="checkbox"]').prop('checked', false);
      $(this).parent().parent().parent().parent().find('.facility_primary_component_checkboxes').attr('disabled', true);
      $(this).parent().parent().parent().parent().find('.infrastructure_primary_component_checkboxes').attr('disabled', true);
    } else if ($(this).parent().parent().parent().parent().find('.builder_proxy_fta_asset_classes input:checked').length == 1) {
      $(this).parent().parent().parent().parent().find('.facility_primary_component_checkboxes').attr('disabled', false);
      $(this).parent().parent().parent().parent().find('.infrastructure_primary_component_checkboxes').attr('disabled', false);
      $(this).parent().parent().parent().parent().find('.facility_primary_component_checkboxes').first().prop('checked', true);
      $(this).parent().parent().parent().parent().find('.infrastructure_primary_component_checkboxes').first().prop('checked', true);
    }

    if ($(this).parent().parent().parent().parent().find('.builder_proxy_fta_asset_classes input[type="checkbox"]:checked').length == $(this).parent().parent().parent().parent().find('.builder_proxy_fta_asset_classes input[type="checkbox"]').length) {
      $(this).parent().parent().parent().parent().find('.fta-category-checkbox').prop('checked', true);
    } else {
      $(this).parent().parent().parent().parent().find('.fta-category-checkbox').prop('checked', false);
    }
  });

  $('.facility_primary_component_checkboxes').on('click', function(event) {
    ensure_at_least_one_checked('.facility_primary_component_checkboxes');
  });
  $('.infrastructure_primary_component_checkboxes').on('click', function(event) {
    ensure_at_least_one_checked('.infrastructure_primary_component_checkboxes');
  });
  function ensure_at_least_one_checked(checkbox_identifier) {
    if ($(checkbox_identifier + ':checked').length < 1) {
      $(checkbox_identifier).first().prop('checked', true);
    }
  }


  $(function(){
    var org_id = 0;
    var asset_seed = JSON.parse('#{@asset_seed.to_json.html_safe}');
    var current_planning_year = #{current_planning_year_year};
    var has_sogr_project_org_list = #{ (@has_sogr_project_org_list || {}).to_json.html_safe };
    var have_sogr_locked_list = #{(@has_locked_sogr_this_fiscal_year || {}).to_json.html_safe};

    // Detect changes in the org selected
    $('#builder_proxy_organization_id').on('change', function(event) {
      var id = $(this).val();

      if (id != org_id) {
        // store the selected org
        org_id = id;

        var is_sogr_locked = $.inArray(parseInt(org_id), have_sogr_locked_list);
        if(is_sogr_locked >= 0) {
          $("#builder_proxy_start_fy option[value='"+(current_planning_year)+"']").hide();
        } else{
          $("#builder_proxy_start_fy option[value='"+(current_planning_year)+"']").show();
        }

        var org_has_sogr_project = has_sogr_project_org_list[org_id];
        var fy_year = current_planning_year;
        if(org_has_sogr_project) {
          $('.builder-warning').show();
          fy_year += 3;
        } else {
          $('.builder-warning').hide();
        }

        // Reset
        $('#builder_proxy_start_fy').val(fy_year);

        // Set asset types of org only
        for (var j = 0; j < asset_seed.length; j++){
          type = asset_seed[j]

          if ($.inArray( parseInt(id), type.orgs ) >= 0) {
            $('#builder_proxy_fta_asset_classes_'+type.id).parent().parent().show();
          } else {
            $('#builder_proxy_fta_asset_classes_'+type.id).parent().parent().hide(); // hide whole span
            $('#builder_proxy_fta_asset_classes_'+type.id).prop('checked', false);

          }
        }

        $('.fta-category-div').show();
        $.each(JSON.parse('#{FtaAssetCategory.active.map{|fta_category| fta_category.name.parameterize.underscore}.to_json.html_safe}'), function( index, value ) {
          if ($('#'+value+'.fta-category-div .builder_proxy_fta_asset_classes span.checkbox:visible').length == 0) {
            $('#'+value+'.fta-category-div').hide();
          }
        });
      }
    });


  });
