%fieldset
  %legend Federal
  %table.table
    %thead
      %tr
        - @budget_data[:labels].each_with_index do |col, col_index|
          - if col_index == 0 
            %th.left
          - else
            %th.right.nowrap= col

    %tbody
      %tr
        - @budget_data[:data][0].each_with_index do |col, col_index|
          - if col_index == 0
            %td.left Budget
          - else
            %td.right= format_as_currency(col)
      %tr
        - @budget_data[:data][2].each_with_index do |col, col_index|
          - if col_index == 0
            %td.left Requested
          - else
            %td.right= format_as_currency(col)
    %tfoot
      %tr
        - @budget_data[:data][4].each_with_index do |col, col_index|
          - if col_index == 0
            %td.left
          - else
            %td.right{:class => ("danger" unless col >= 0)}= format_as_currency(col)
            
%fieldset
  %legend State
  %table.table
    %thead
      %tr
        - @budget_data[:labels].each_with_index do |col, col_index|
          - if col_index == 0 
            %th.left
          - else
            %th.right.nowrap= col

    %tbody
      %tr
        - @budget_data[:data][1].each_with_index do |col, col_index|
          - if col_index == 0
            %td.left Budget
          - else
            %td.right= format_as_currency(col)
      %tr
        - @budget_data[:data][3].each_with_index do |col, col_index|
          - if col_index == 0
            %td.left Requested
          - else
            %td.right= format_as_currency(col)
    %tfoot
      %tr
        - @budget_data[:data][5].each_with_index do |col, col_index|
          - if col_index == 0
            %td.left
          - else
            %td.right{:class => ("danger" unless col >= 0)}= format_as_currency(col)
